export const ConfigurationFields = {
    resetSessionApiThreshold: 'resetSessionApiThreshold',
    dataWupDispatchRateSettings: 'dataWupDispatchRateSettings',
    logWupDispatchRateSettings: 'logWupDispatchRateSettings',
    logServerURL: 'logAddress',
    enableMinifiedLogUri: 'enableMinifiedLogUri',
    forceDynamicDataWupDispatchSettings: 'forceDynamicDataWupDispatchSettings',
    wupStatisticsLogIntervalMs: 'wupStatisticsLogIntervalMs',
    serverCommunicationSettings: 'serverCommunicationSettings',
    wupResponseTimeout: 'wupResponseTimeout', // Deprecated
    wupMessageRequestTimeout: 'wupMessageRequestTimeout',
    logMessageRequestTimeout: 'logMessageRequestTimeout',
    collectKeyRegionValue: 'collectKeyRegionValue',
    crossDomainsList: 'crossDomainsList',
    crossDomainsTimeout: 'crossDomainsTimeout',
    isMutationObserver: 'isMutationObserver',
    isEnabled: 'isEnabled',
    slaveChannelHandshakeTimeout: 'slaveChannelHandshakeTimeout',
    slaveAliveMessageInterval: 'slaveAliveMessageInterval',
    collectCustomElementAttribute: 'collectCustomElementAttribute',
    customElementAttribute: 'customElementAttribute',
    enableFramesProcessing: 'enableFramesProcessing',
    enableSameSiteNoneAndSecureCookies: 'enableSameSiteNoneAndSecureCookies',
    wupServerURL: 'wupServerURL',
    logAddress: 'logAddress',
    isCaptureKeyEvents: 'isCaptureKeyEvents',
    locationEventsTimeoutMsec: 'locationEventsTimeoutMsec',
    heartBeatMessageInterval: 'heartBeatMessageInterval',
    isMotionAroundTouchEnabled: 'isMotionAroundTouchEnabled',
    motionPaddingAroundTouchMSec: 'motionPaddingAroundTouchMSec',
    isMotionOnSessionStart: 'isMotionOnSessionStart',
    motionPaddingOnSessionStartMSec: 'motionPaddingOnSessionStartMSec',
    isVMDetection: 'isVMDetection',
    isScrollCollect: 'isScrollCollect',
    isContextPropsFeature: 'isContextPropsFeature',
    isCrossDomain: 'isCrossdomain',
    gyroEventsThreshold: 'gyroEventsThreshold',
    gyroEventsSamplePeriod: 'gyroEventsSamplePeriod',
    dataQPassWorkerInterval: 'dataQPassWorkerInterval',
    accelerometerEventsSamplePeriod: 'accelerometerEventsSamplePeriod',
    orientationEventsThreshold: 'orientationEventsThreshold',
    orientationEventsSamplePeriod: 'orientationEventsSamplePeriod',
    isAudioDetection: 'isAudioDetection',
    stateChangeEnabled: 'stateChangeEnabled',
    logLevel: 'logLevel',
    enableCustomElementsProcessing: 'enableCustomElementsProcessing',
    keyEventsMaskSpecialChars: 'keyEventsMaskSpecialChars',
    collectSelectElementBlurAndFocusEvents: 'collectSelectElementBlurAndFocusEvents',
    allowedUnmaskedValuesList: 'allowedUnmaskedValuesList',
    enableUnmaskedValues: 'enableUnmaskedValues',
    wupMessageNumToRetry: 'wupMessageNumToRetry',
    wupMessageRetryInterval: 'wupMessageRetryInterval',
    wupIncrementalGrowthBetweenFailures: 'wupIncrementalGrowthBetweenFailures',
    wupMaxIntervalBetweenFailures: 'wupMaxIntervalBetweenFailures',
    logMessageNumToRetry: 'logMessageNumToRetry',
    logMessageRetryInterval: 'logMessageRetryInterval',
    logIncrementalGrowthBetweenFailures: 'logIncrementalGrowthBetweenFailures',
    logMaxIntervalBetweenFailures: 'logMaxIntervalBetweenFailures',
    cdsNumExpirationTime: 'cdsNumExpirationTime',
    enableCoordinatesMasking: 'enableCoordinatesMasking',
    maskElementsAttributes: 'maskElementsAttributes',
    enableAcknowledgeMessageEvents: 'enableAcknowledgeMessageEvents',
    timeTillClearingElementsBufferQueueTimeout: 'timeTillClearingElementsBufferQueueTimeout',
    acknowledgeDataDispatchingRate: 'acknowledgeDataDispatchingRate',
    isChannelSupportsAckMessageLogic: 'isChannelSupportsAckMessageLogic',
    parentElementSelector: 'parentElementSelector',
    childElementWithCustomAttribute: 'childElementWithCustomAttribute',
    elementDataAttribute: 'elementDataAttribute',
    customButtons: 'customButtons',
    enableElementHierarchy: 'enableElementHierarchy',
    enableElementCategory: 'enableElementCategory',
    agentType: 'agentType',
    collectionMode: 'collectionMode',
    enableWupMessagesHashing: 'enableWupMessagesHashing',
    enableStartupCustomerSessionId: 'enableStartupCustomerSessionId',
    offloadFontsCollectionEnabled: 'offloadFontsCollectionEnabled',
    mutationMaxChunkSize: 'mutationMaxChunkSize',
    mutationChunkDelayMs: 'mutationChunkDelayMs',
    passwordIdMaskingList: 'passwordIdMaskingList',
    elementUniqueIDConfiguration: 'elementUniqueIDConfiguration',
    fontCollection: 'fontCollection',
    useLegacyZeroTimeout: 'useLegacyZeroTimeout',
};
